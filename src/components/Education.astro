---
interface Props {
    education: {
        name: string;
        url?: string; // Optionnel
        startDate: string;
        endDate: string | null; // Peut Ãªtre null si toujours en poste
        summary: string;
    }
}
const {education} = Astro.props;
const startDate = new Date(education.startDate);
const endDate = education.endDate ? new Date(education.endDate) : null;
const formatDate = (date: Date) => {
    return new Intl.DateTimeFormat('fr-FR', { month: 'long', year: 'numeric' }).format(date)
}
---

<div class="education">
    <div class="education-header">
        <div class="school">
            <h3>{education.url
                    ? <a href={education.url} target="_blank">{education.name}</a>
                    : education.name
                }
            </h3>
        </div>
        <div class="date">
            {formatDate(startDate)} - {endDate ? formatDate(endDate) : 'Aujourd\'hui'}
        </div>
    </div>
    <div class="education-body">
        <p>{education.summary}</p>
    </div>
</div>

<style>
    .education{
        border: 1px solid #e9e9e9;
        border-radius: 0.5rem;
        padding: 0.5rem;
        margin-top: 1rem;
    }
    .education:nth-of-type(1){
        margin-top: 0;
    }
    .education-header{
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    .school h3 a{
        font-size: 1.1rem;
        color: #777;
        transition: .3s ease;
    }
    .school h3 a:hover{
        text-decoration: underline;
        color: #333;
    }
    .date{
        font-size: .75rem;
        color: #777;
    }
    .education-body{}
    .education-body p{color: #777;}
</style>